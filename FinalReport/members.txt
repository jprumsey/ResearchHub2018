Duke ResearchHub Final Project Members File
Team Members: Christian Burke, Samuel Chan, Vinit Parekh, James Rumsey, Justin Suh
=========================
Christian Burke:
Throughout the course of this project, I worked on backend python (primarily models.py) that connected our database to flask and also wrote a series of python scripts to web scrape all scholar information from https://scholars.duke.edu/people. After successfully scraping the information, I then formatted the data as a pandas DataFrame object and inserted the values into our database.
Since the last milestone, I completely finished the web scraping process and successfully inserted the values into our database. When the last milestone was due, I was scraping links to each faculty page from the home of https://scholars.duke.edu/people, then scraping faculty information by creating requests from the links on the home page, then attempting to iterate through all the pages. I experienced great setbacks with the page iteration because there was no efficient way to cycle through the pages (the link does not change upon clicking a new page) and it created a vast number of stale element exceptions due to a detached DOM. Thankfully I was able to find an RDF file containing links to all 6,667 faculty members which I download locally. From there, I then parsed the file using an XML element tree parser and received all links to all faculty pages in a much more efficient manner. I then scraped each faculty memberâ€™s information using BeautifulSoup and returned their information as a pandas DataFrame object which was concatenated with the main DataFrame located in main_scrape.py. I then converted this DataFrame to SQL by inserting all the values.

Sam Chan:
Throughout this project, I worked primarily on database design, creation, and implementation, front end design, as well as integration with the backend via a RESTful API. I initially worked on the creation of the database schema, transitioned into creation of forms, homepage, routing, and other front end components of the main website. Then, I worked with James and Vinit to pass information from the backend (in the form of json objects) to the front end and display the elements on the page, along with suitable routing and a clean interface for easy user navigation. Next, I worked with other members of the team to resolve any merge conflicts that arose when combining branches together, as well as starting the database, populating with the data scraped from the python scripts, and displaying it on localhost. I looked extensively into deployment on AWS/GCP and was able to deploy it to an ephemeral ip (http://35.196.112.82)

Vinit Parekh:
I worked primarily on three aspects of this project. First, I learned React and created the Research and Scholars section of the website. These pages consisted of features such as pagination, project page linking, and Apply section of the page. Second, I focused on mediating any merge conflicts between branches. Third, I worked with James Rumsey to adjust the Restful API and pass information to the website via POST/ GET requests. Since the last milestone, I helped organize and complete the documentation for the rest of the project (Read ME, Sprints, Milestone reports.)

James Rumsey:
Created RESTful API in Flask that translated PostgreSQL data to JSON format, enabling the use of React.js as a front-end framework.
Worked on database design and object-relational mapping in Flask.

Justin Suh:
For this project, I was primarily involved in the initial database design and creation and in the front end development of our web application. While later I primarily focused on front end development, I was involved in the process of building and designing the sql database. I learned React and built most of the framework for the Homepage of our web application. We utilized the Semantic UI React to build our web application. Since the last milestone, I continued to work on the front end, working on a navigation bar that ultimately only went on the homepage. I assisted with some of the merge conflicts that plague our team, but the majority of the work done on this end was done by other members of our group.
